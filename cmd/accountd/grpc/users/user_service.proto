// Copyright (c) 2020 Richard Youngkin. All rights reserved.
// Use of this source code is governed by a MIT-style
// license that can be found in the LICENSE file.

syntax = "proto3";
package accountd;

import "google/protobuf/empty.proto";

// 'go_package' will place the generated code at this path relative to
// '--go_out' specification. The generated code will be in the 'accountd' package.
option go_package = "pkg/accountd";

service UserServer {
    rpc GetUser (UserID) returns (User) {}
    rpc GetUsers(google.protobuf.Empty) returns (Users) {}
    rpc CreateUser(User) returns (UserID) {}
    rpc CreateUsers(Users) returns (BulkResponse) {}
    rpc UpdateUser(User) returns (google.protobuf.Empty) {} 
    rpc UpdateUsers(Users) returns (BulkResponse) {}
    rpc DeleteUser(UserID) returns (google.protobuf.Empty) {}
    rpc Health(google.protobuf.Empty) returns (HealthMsg) {}
}

enum RoleEnum {
    PRIMARY = 0;
    UNRESTRICTED = 1;
    RESTRICTED = 2;
}

enum StatusEnum {
    // StatusBadRequest indicates that the client submitted an invalid request
	StatusBadRequest = 0;
	// StatusOK indicates the request completed successfully
	StatusOK = 1;
	// StatusCreated indicates that the requested resource was created
	StatusCreated = 2;
	// StatusConflict indicates that one or more of a set of bulk requests failed
	StatusConflict = 3;
	// StatusServerError indicates that the server encountered an error while servicing the request
	StatusServerError = 4;
	// StatusNotFound indicates the requested resource does not exist
	StatusNotFound= 5;
}

message Response {
    StatusEnum Status = 1;
    string ErrMsg = 2;
    int64 ErrReason = 3;
    UserID UserID = 4;
}

message BulkResponse {
    StatusEnum OverallStatus = 1;
    repeated Response Response = 2;
}
    
message User {
    int64    AccountID = 1;
    string   HREF = 2;    
    int64    ID = 3;   
    string   Name = 4;   
    string   EMail = 5;    
    RoleEnum Role = 6;
    string   Password  = 7;
}

message Users {
    repeated User users = 1;
}

message UserID {
    int64 id = 1;
}

message UserIDs {
    repeated UserID userID = 1;
}

message HealthMsg {
    string Status = 1;
}
